//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebApplicationMVC.webService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataToUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByUsersEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserNameAndPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataToCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryByCatIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataIntoProdoctsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProctByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProductsByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByUsersIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataToOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataToOrderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataToPreOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderByOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDetailsByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreOrderByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderByLastOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastOrderDetailsByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCurrentStockLebelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDetailsFromOrderIdOrEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrderDetailsBySuppIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopPreOrderAndIsPendingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTopPreOrdertempItemCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePreOrderStatusByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderDetailsStatusByIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::WebApplicationMVC.Properties.Settings.Default.WebApplicationMVC_webService_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event InsertDataToUsersCompletedEventHandler InsertDataToUsersCompleted;
        
        /// <remarks/>
        public event GetUserByUsersEmailCompletedEventHandler GetUserByUsersEmailCompleted;
        
        /// <remarks/>
        public event CheckUserNameAndPasswordCompletedEventHandler CheckUserNameAndPasswordCompleted;
        
        /// <remarks/>
        public event InsertDataToCategoriesCompletedEventHandler InsertDataToCategoriesCompleted;
        
        /// <remarks/>
        public event GetAllCategoriesCompletedEventHandler GetAllCategoriesCompleted;
        
        /// <remarks/>
        public event GetCategoryByCatIdCompletedEventHandler GetCategoryByCatIdCompleted;
        
        /// <remarks/>
        public event UpdateCategoryByIdCompletedEventHandler UpdateCategoryByIdCompleted;
        
        /// <remarks/>
        public event InsertDataIntoProdoctsCompletedEventHandler InsertDataIntoProdoctsCompleted;
        
        /// <remarks/>
        public event GetAllProductsCompletedEventHandler GetAllProductsCompleted;
        
        /// <remarks/>
        public event GetProctByProductIdCompletedEventHandler GetProctByProductIdCompleted;
        
        /// <remarks/>
        public event UpdateProductByIdCompletedEventHandler UpdateProductByIdCompleted;
        
        /// <remarks/>
        public event GetAllProductsByUserIdCompletedEventHandler GetAllProductsByUserIdCompleted;
        
        /// <remarks/>
        public event GetUserByUsersIDCompletedEventHandler GetUserByUsersIDCompleted;
        
        /// <remarks/>
        public event InsertDataToOrdersCompletedEventHandler InsertDataToOrdersCompleted;
        
        /// <remarks/>
        public event InsertDataToOrderDetailsCompletedEventHandler InsertDataToOrderDetailsCompleted;
        
        /// <remarks/>
        public event InsertDataToPreOrderCompletedEventHandler InsertDataToPreOrderCompleted;
        
        /// <remarks/>
        public event GetOrderByOrderIdCompletedEventHandler GetOrderByOrderIdCompleted;
        
        /// <remarks/>
        public event GetOrderDetailsByIdCompletedEventHandler GetOrderDetailsByIdCompleted;
        
        /// <remarks/>
        public event GetPreOrderByIdCompletedEventHandler GetPreOrderByIdCompleted;
        
        /// <remarks/>
        public event GetOrderByLastOrderIdCompletedEventHandler GetOrderByLastOrderIdCompleted;
        
        /// <remarks/>
        public event GetLastOrderDetailsByIdCompletedEventHandler GetLastOrderDetailsByIdCompleted;
        
        /// <remarks/>
        public event UpdateCurrentStockLebelCompletedEventHandler UpdateCurrentStockLebelCompleted;
        
        /// <remarks/>
        public event GetOrderDetailsFromOrderIdOrEmailCompletedEventHandler GetOrderDetailsFromOrderIdOrEmailCompleted;
        
        /// <remarks/>
        public event GetAllOrderDetailsBySuppIDCompletedEventHandler GetAllOrderDetailsBySuppIDCompleted;
        
        /// <remarks/>
        public event GetAllOrderDetailsCompletedEventHandler GetAllOrderDetailsCompleted;
        
        /// <remarks/>
        public event GetTopPreOrderAndIsPendingCompletedEventHandler GetTopPreOrderAndIsPendingCompleted;
        
        /// <remarks/>
        public event UpdateTopPreOrdertempItemCountCompletedEventHandler UpdateTopPreOrdertempItemCountCompleted;
        
        /// <remarks/>
        public event UpdatePreOrderStatusByIDCompletedEventHandler UpdatePreOrderStatusByIDCompleted;
        
        /// <remarks/>
        public event UpdateOrderDetailsStatusByIDCompletedEventHandler UpdateOrderDetailsStatusByIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDataToUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertDataToUsers(string Fname, string Lname, int Ulevel, string Email, string Password) {
            object[] results = this.Invoke("InsertDataToUsers", new object[] {
                        Fname,
                        Lname,
                        Ulevel,
                        Email,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataToUsersAsync(string Fname, string Lname, int Ulevel, string Email, string Password) {
            this.InsertDataToUsersAsync(Fname, Lname, Ulevel, Email, Password, null);
        }
        
        /// <remarks/>
        public void InsertDataToUsersAsync(string Fname, string Lname, int Ulevel, string Email, string Password, object userState) {
            if ((this.InsertDataToUsersOperationCompleted == null)) {
                this.InsertDataToUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataToUsersOperationCompleted);
            }
            this.InvokeAsync("InsertDataToUsers", new object[] {
                        Fname,
                        Lname,
                        Ulevel,
                        Email,
                        Password}, this.InsertDataToUsersOperationCompleted, userState);
        }
        
        private void OnInsertDataToUsersOperationCompleted(object arg) {
            if ((this.InsertDataToUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataToUsersCompleted(this, new InsertDataToUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByUsersEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUserByUsersEmail(string Email) {
            object[] results = this.Invoke("GetUserByUsersEmail", new object[] {
                        Email});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByUsersEmailAsync(string Email) {
            this.GetUserByUsersEmailAsync(Email, null);
        }
        
        /// <remarks/>
        public void GetUserByUsersEmailAsync(string Email, object userState) {
            if ((this.GetUserByUsersEmailOperationCompleted == null)) {
                this.GetUserByUsersEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByUsersEmailOperationCompleted);
            }
            this.InvokeAsync("GetUserByUsersEmail", new object[] {
                        Email}, this.GetUserByUsersEmailOperationCompleted, userState);
        }
        
        private void OnGetUserByUsersEmailOperationCompleted(object arg) {
            if ((this.GetUserByUsersEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByUsersEmailCompleted(this, new GetUserByUsersEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserNameAndPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUserNameAndPassword(LoginInfo info) {
            object[] results = this.Invoke("CheckUserNameAndPassword", new object[] {
                        info});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserNameAndPasswordAsync(LoginInfo info) {
            this.CheckUserNameAndPasswordAsync(info, null);
        }
        
        /// <remarks/>
        public void CheckUserNameAndPasswordAsync(LoginInfo info, object userState) {
            if ((this.CheckUserNameAndPasswordOperationCompleted == null)) {
                this.CheckUserNameAndPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserNameAndPasswordOperationCompleted);
            }
            this.InvokeAsync("CheckUserNameAndPassword", new object[] {
                        info}, this.CheckUserNameAndPasswordOperationCompleted, userState);
        }
        
        private void OnCheckUserNameAndPasswordOperationCompleted(object arg) {
            if ((this.CheckUserNameAndPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserNameAndPasswordCompleted(this, new CheckUserNameAndPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDataToCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertDataToCategories(string name, string dcs) {
            object[] results = this.Invoke("InsertDataToCategories", new object[] {
                        name,
                        dcs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataToCategoriesAsync(string name, string dcs) {
            this.InsertDataToCategoriesAsync(name, dcs, null);
        }
        
        /// <remarks/>
        public void InsertDataToCategoriesAsync(string name, string dcs, object userState) {
            if ((this.InsertDataToCategoriesOperationCompleted == null)) {
                this.InsertDataToCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataToCategoriesOperationCompleted);
            }
            this.InvokeAsync("InsertDataToCategories", new object[] {
                        name,
                        dcs}, this.InsertDataToCategoriesOperationCompleted, userState);
        }
        
        private void OnInsertDataToCategoriesOperationCompleted(object arg) {
            if ((this.InsertDataToCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataToCategoriesCompleted(this, new InsertDataToCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Category[] GetAllCategories() {
            object[] results = this.Invoke("GetAllCategories", new object[0]);
            return ((Category[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCategoriesAsync() {
            this.GetAllCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCategoriesAsync(object userState) {
            if ((this.GetAllCategoriesOperationCompleted == null)) {
                this.GetAllCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAllCategories", new object[0], this.GetAllCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAllCategoriesOperationCompleted(object arg) {
            if ((this.GetAllCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCategoriesCompleted(this, new GetAllCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategoryByCatId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Category GetCategoryByCatId(int id) {
            object[] results = this.Invoke("GetCategoryByCatId", new object[] {
                        id});
            return ((Category)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryByCatIdAsync(int id) {
            this.GetCategoryByCatIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCategoryByCatIdAsync(int id, object userState) {
            if ((this.GetCategoryByCatIdOperationCompleted == null)) {
                this.GetCategoryByCatIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryByCatIdOperationCompleted);
            }
            this.InvokeAsync("GetCategoryByCatId", new object[] {
                        id}, this.GetCategoryByCatIdOperationCompleted, userState);
        }
        
        private void OnGetCategoryByCatIdOperationCompleted(object arg) {
            if ((this.GetCategoryByCatIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryByCatIdCompleted(this, new GetCategoryByCatIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCategoryById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCategoryById(int id, string name, string description) {
            object[] results = this.Invoke("UpdateCategoryById", new object[] {
                        id,
                        name,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryByIdAsync(int id, string name, string description) {
            this.UpdateCategoryByIdAsync(id, name, description, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryByIdAsync(int id, string name, string description, object userState) {
            if ((this.UpdateCategoryByIdOperationCompleted == null)) {
                this.UpdateCategoryByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryByIdOperationCompleted);
            }
            this.InvokeAsync("UpdateCategoryById", new object[] {
                        id,
                        name,
                        description}, this.UpdateCategoryByIdOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryByIdOperationCompleted(object arg) {
            if ((this.UpdateCategoryByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryByIdCompleted(this, new UpdateCategoryByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDataIntoProdocts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertDataIntoProdocts(string name, string description, int stockLevel, int categoryId, int supplierId, int isLive, decimal price, int size, string imgUrl) {
            object[] results = this.Invoke("InsertDataIntoProdocts", new object[] {
                        name,
                        description,
                        stockLevel,
                        categoryId,
                        supplierId,
                        isLive,
                        price,
                        size,
                        imgUrl});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataIntoProdoctsAsync(string name, string description, int stockLevel, int categoryId, int supplierId, int isLive, decimal price, int size, string imgUrl) {
            this.InsertDataIntoProdoctsAsync(name, description, stockLevel, categoryId, supplierId, isLive, price, size, imgUrl, null);
        }
        
        /// <remarks/>
        public void InsertDataIntoProdoctsAsync(string name, string description, int stockLevel, int categoryId, int supplierId, int isLive, decimal price, int size, string imgUrl, object userState) {
            if ((this.InsertDataIntoProdoctsOperationCompleted == null)) {
                this.InsertDataIntoProdoctsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataIntoProdoctsOperationCompleted);
            }
            this.InvokeAsync("InsertDataIntoProdocts", new object[] {
                        name,
                        description,
                        stockLevel,
                        categoryId,
                        supplierId,
                        isLive,
                        price,
                        size,
                        imgUrl}, this.InsertDataIntoProdoctsOperationCompleted, userState);
        }
        
        private void OnInsertDataIntoProdoctsOperationCompleted(object arg) {
            if ((this.InsertDataIntoProdoctsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataIntoProdoctsCompleted(this, new InsertDataIntoProdoctsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] GetAllProducts() {
            object[] results = this.Invoke("GetAllProducts", new object[0]);
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProductsAsync() {
            this.GetAllProductsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllProductsAsync(object userState) {
            if ((this.GetAllProductsOperationCompleted == null)) {
                this.GetAllProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProductsOperationCompleted);
            }
            this.InvokeAsync("GetAllProducts", new object[0], this.GetAllProductsOperationCompleted, userState);
        }
        
        private void OnGetAllProductsOperationCompleted(object arg) {
            if ((this.GetAllProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProductsCompleted(this, new GetAllProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProctByProductId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product GetProctByProductId(int id) {
            object[] results = this.Invoke("GetProctByProductId", new object[] {
                        id});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void GetProctByProductIdAsync(int id) {
            this.GetProctByProductIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetProctByProductIdAsync(int id, object userState) {
            if ((this.GetProctByProductIdOperationCompleted == null)) {
                this.GetProctByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProctByProductIdOperationCompleted);
            }
            this.InvokeAsync("GetProctByProductId", new object[] {
                        id}, this.GetProctByProductIdOperationCompleted, userState);
        }
        
        private void OnGetProctByProductIdOperationCompleted(object arg) {
            if ((this.GetProctByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProctByProductIdCompleted(this, new GetProctByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProductById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProductById(int id, string name, string description, int stockLevel, int categoryId, int supplierId, decimal price, int size, string imgUrl) {
            object[] results = this.Invoke("UpdateProductById", new object[] {
                        id,
                        name,
                        description,
                        stockLevel,
                        categoryId,
                        supplierId,
                        price,
                        size,
                        imgUrl});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductByIdAsync(int id, string name, string description, int stockLevel, int categoryId, int supplierId, decimal price, int size, string imgUrl) {
            this.UpdateProductByIdAsync(id, name, description, stockLevel, categoryId, supplierId, price, size, imgUrl, null);
        }
        
        /// <remarks/>
        public void UpdateProductByIdAsync(int id, string name, string description, int stockLevel, int categoryId, int supplierId, decimal price, int size, string imgUrl, object userState) {
            if ((this.UpdateProductByIdOperationCompleted == null)) {
                this.UpdateProductByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductByIdOperationCompleted);
            }
            this.InvokeAsync("UpdateProductById", new object[] {
                        id,
                        name,
                        description,
                        stockLevel,
                        categoryId,
                        supplierId,
                        price,
                        size,
                        imgUrl}, this.UpdateProductByIdOperationCompleted, userState);
        }
        
        private void OnUpdateProductByIdOperationCompleted(object arg) {
            if ((this.UpdateProductByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductByIdCompleted(this, new UpdateProductByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllProductsByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] GetAllProductsByUserId(int id) {
            object[] results = this.Invoke("GetAllProductsByUserId", new object[] {
                        id});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProductsByUserIdAsync(int id) {
            this.GetAllProductsByUserIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAllProductsByUserIdAsync(int id, object userState) {
            if ((this.GetAllProductsByUserIdOperationCompleted == null)) {
                this.GetAllProductsByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProductsByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetAllProductsByUserId", new object[] {
                        id}, this.GetAllProductsByUserIdOperationCompleted, userState);
        }
        
        private void OnGetAllProductsByUserIdOperationCompleted(object arg) {
            if ((this.GetAllProductsByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProductsByUserIdCompleted(this, new GetAllProductsByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByUsersID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUserByUsersID(int id) {
            object[] results = this.Invoke("GetUserByUsersID", new object[] {
                        id});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByUsersIDAsync(int id) {
            this.GetUserByUsersIDAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUserByUsersIDAsync(int id, object userState) {
            if ((this.GetUserByUsersIDOperationCompleted == null)) {
                this.GetUserByUsersIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByUsersIDOperationCompleted);
            }
            this.InvokeAsync("GetUserByUsersID", new object[] {
                        id}, this.GetUserByUsersIDOperationCompleted, userState);
        }
        
        private void OnGetUserByUsersIDOperationCompleted(object arg) {
            if ((this.GetUserByUsersIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByUsersIDCompleted(this, new GetUserByUsersIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDataToOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertDataToOrders(Order content) {
            object[] results = this.Invoke("InsertDataToOrders", new object[] {
                        content});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataToOrdersAsync(Order content) {
            this.InsertDataToOrdersAsync(content, null);
        }
        
        /// <remarks/>
        public void InsertDataToOrdersAsync(Order content, object userState) {
            if ((this.InsertDataToOrdersOperationCompleted == null)) {
                this.InsertDataToOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataToOrdersOperationCompleted);
            }
            this.InvokeAsync("InsertDataToOrders", new object[] {
                        content}, this.InsertDataToOrdersOperationCompleted, userState);
        }
        
        private void OnInsertDataToOrdersOperationCompleted(object arg) {
            if ((this.InsertDataToOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataToOrdersCompleted(this, new InsertDataToOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDataToOrderDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertDataToOrderDetails(OrderDetails content) {
            object[] results = this.Invoke("InsertDataToOrderDetails", new object[] {
                        content});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataToOrderDetailsAsync(OrderDetails content) {
            this.InsertDataToOrderDetailsAsync(content, null);
        }
        
        /// <remarks/>
        public void InsertDataToOrderDetailsAsync(OrderDetails content, object userState) {
            if ((this.InsertDataToOrderDetailsOperationCompleted == null)) {
                this.InsertDataToOrderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataToOrderDetailsOperationCompleted);
            }
            this.InvokeAsync("InsertDataToOrderDetails", new object[] {
                        content}, this.InsertDataToOrderDetailsOperationCompleted, userState);
        }
        
        private void OnInsertDataToOrderDetailsOperationCompleted(object arg) {
            if ((this.InsertDataToOrderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataToOrderDetailsCompleted(this, new InsertDataToOrderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDataToPreOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertDataToPreOrder(PreOrder content) {
            object[] results = this.Invoke("InsertDataToPreOrder", new object[] {
                        content});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataToPreOrderAsync(PreOrder content) {
            this.InsertDataToPreOrderAsync(content, null);
        }
        
        /// <remarks/>
        public void InsertDataToPreOrderAsync(PreOrder content, object userState) {
            if ((this.InsertDataToPreOrderOperationCompleted == null)) {
                this.InsertDataToPreOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataToPreOrderOperationCompleted);
            }
            this.InvokeAsync("InsertDataToPreOrder", new object[] {
                        content}, this.InsertDataToPreOrderOperationCompleted, userState);
        }
        
        private void OnInsertDataToPreOrderOperationCompleted(object arg) {
            if ((this.InsertDataToPreOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataToPreOrderCompleted(this, new InsertDataToPreOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderByOrderId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Order GetOrderByOrderId(int id) {
            object[] results = this.Invoke("GetOrderByOrderId", new object[] {
                        id});
            return ((Order)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderByOrderIdAsync(int id) {
            this.GetOrderByOrderIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetOrderByOrderIdAsync(int id, object userState) {
            if ((this.GetOrderByOrderIdOperationCompleted == null)) {
                this.GetOrderByOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderByOrderIdOperationCompleted);
            }
            this.InvokeAsync("GetOrderByOrderId", new object[] {
                        id}, this.GetOrderByOrderIdOperationCompleted, userState);
        }
        
        private void OnGetOrderByOrderIdOperationCompleted(object arg) {
            if ((this.GetOrderByOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderByOrderIdCompleted(this, new GetOrderByOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderDetailsById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDetails GetOrderDetailsById(int id) {
            object[] results = this.Invoke("GetOrderDetailsById", new object[] {
                        id});
            return ((OrderDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDetailsByIdAsync(int id) {
            this.GetOrderDetailsByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetOrderDetailsByIdAsync(int id, object userState) {
            if ((this.GetOrderDetailsByIdOperationCompleted == null)) {
                this.GetOrderDetailsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailsByIdOperationCompleted);
            }
            this.InvokeAsync("GetOrderDetailsById", new object[] {
                        id}, this.GetOrderDetailsByIdOperationCompleted, userState);
        }
        
        private void OnGetOrderDetailsByIdOperationCompleted(object arg) {
            if ((this.GetOrderDetailsByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDetailsByIdCompleted(this, new GetOrderDetailsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPreOrderById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PreOrder GetPreOrderById(int id) {
            object[] results = this.Invoke("GetPreOrderById", new object[] {
                        id});
            return ((PreOrder)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreOrderByIdAsync(int id) {
            this.GetPreOrderByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPreOrderByIdAsync(int id, object userState) {
            if ((this.GetPreOrderByIdOperationCompleted == null)) {
                this.GetPreOrderByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreOrderByIdOperationCompleted);
            }
            this.InvokeAsync("GetPreOrderById", new object[] {
                        id}, this.GetPreOrderByIdOperationCompleted, userState);
        }
        
        private void OnGetPreOrderByIdOperationCompleted(object arg) {
            if ((this.GetPreOrderByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreOrderByIdCompleted(this, new GetPreOrderByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderByLastOrderId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Order GetOrderByLastOrderId() {
            object[] results = this.Invoke("GetOrderByLastOrderId", new object[0]);
            return ((Order)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderByLastOrderIdAsync() {
            this.GetOrderByLastOrderIdAsync(null);
        }
        
        /// <remarks/>
        public void GetOrderByLastOrderIdAsync(object userState) {
            if ((this.GetOrderByLastOrderIdOperationCompleted == null)) {
                this.GetOrderByLastOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderByLastOrderIdOperationCompleted);
            }
            this.InvokeAsync("GetOrderByLastOrderId", new object[0], this.GetOrderByLastOrderIdOperationCompleted, userState);
        }
        
        private void OnGetOrderByLastOrderIdOperationCompleted(object arg) {
            if ((this.GetOrderByLastOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderByLastOrderIdCompleted(this, new GetOrderByLastOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastOrderDetailsById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDetails GetLastOrderDetailsById() {
            object[] results = this.Invoke("GetLastOrderDetailsById", new object[0]);
            return ((OrderDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastOrderDetailsByIdAsync() {
            this.GetLastOrderDetailsByIdAsync(null);
        }
        
        /// <remarks/>
        public void GetLastOrderDetailsByIdAsync(object userState) {
            if ((this.GetLastOrderDetailsByIdOperationCompleted == null)) {
                this.GetLastOrderDetailsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastOrderDetailsByIdOperationCompleted);
            }
            this.InvokeAsync("GetLastOrderDetailsById", new object[0], this.GetLastOrderDetailsByIdOperationCompleted, userState);
        }
        
        private void OnGetLastOrderDetailsByIdOperationCompleted(object arg) {
            if ((this.GetLastOrderDetailsByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastOrderDetailsByIdCompleted(this, new GetLastOrderDetailsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCurrentStockLebel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCurrentStockLebel(int Stock, int Id) {
            object[] results = this.Invoke("UpdateCurrentStockLebel", new object[] {
                        Stock,
                        Id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCurrentStockLebelAsync(int Stock, int Id) {
            this.UpdateCurrentStockLebelAsync(Stock, Id, null);
        }
        
        /// <remarks/>
        public void UpdateCurrentStockLebelAsync(int Stock, int Id, object userState) {
            if ((this.UpdateCurrentStockLebelOperationCompleted == null)) {
                this.UpdateCurrentStockLebelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCurrentStockLebelOperationCompleted);
            }
            this.InvokeAsync("UpdateCurrentStockLebel", new object[] {
                        Stock,
                        Id}, this.UpdateCurrentStockLebelOperationCompleted, userState);
        }
        
        private void OnUpdateCurrentStockLebelOperationCompleted(object arg) {
            if ((this.UpdateCurrentStockLebelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCurrentStockLebelCompleted(this, new UpdateCurrentStockLebelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderDetailsFromOrderIdOrEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDetailsWithDateTime[] GetOrderDetailsFromOrderIdOrEmail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> orderId, string Email) {
            object[] results = this.Invoke("GetOrderDetailsFromOrderIdOrEmail", new object[] {
                        orderId,
                        Email});
            return ((OrderDetailsWithDateTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDetailsFromOrderIdOrEmailAsync(System.Nullable<int> orderId, string Email) {
            this.GetOrderDetailsFromOrderIdOrEmailAsync(orderId, Email, null);
        }
        
        /// <remarks/>
        public void GetOrderDetailsFromOrderIdOrEmailAsync(System.Nullable<int> orderId, string Email, object userState) {
            if ((this.GetOrderDetailsFromOrderIdOrEmailOperationCompleted == null)) {
                this.GetOrderDetailsFromOrderIdOrEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailsFromOrderIdOrEmailOperationCompleted);
            }
            this.InvokeAsync("GetOrderDetailsFromOrderIdOrEmail", new object[] {
                        orderId,
                        Email}, this.GetOrderDetailsFromOrderIdOrEmailOperationCompleted, userState);
        }
        
        private void OnGetOrderDetailsFromOrderIdOrEmailOperationCompleted(object arg) {
            if ((this.GetOrderDetailsFromOrderIdOrEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDetailsFromOrderIdOrEmailCompleted(this, new GetOrderDetailsFromOrderIdOrEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllOrderDetailsBySuppID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDetailsWithDateTime[] GetAllOrderDetailsBySuppID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> SuppID) {
            object[] results = this.Invoke("GetAllOrderDetailsBySuppID", new object[] {
                        SuppID});
            return ((OrderDetailsWithDateTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrderDetailsBySuppIDAsync(System.Nullable<int> SuppID) {
            this.GetAllOrderDetailsBySuppIDAsync(SuppID, null);
        }
        
        /// <remarks/>
        public void GetAllOrderDetailsBySuppIDAsync(System.Nullable<int> SuppID, object userState) {
            if ((this.GetAllOrderDetailsBySuppIDOperationCompleted == null)) {
                this.GetAllOrderDetailsBySuppIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrderDetailsBySuppIDOperationCompleted);
            }
            this.InvokeAsync("GetAllOrderDetailsBySuppID", new object[] {
                        SuppID}, this.GetAllOrderDetailsBySuppIDOperationCompleted, userState);
        }
        
        private void OnGetAllOrderDetailsBySuppIDOperationCompleted(object arg) {
            if ((this.GetAllOrderDetailsBySuppIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrderDetailsBySuppIDCompleted(this, new GetAllOrderDetailsBySuppIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllOrderDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDetailsWithDateTime[] GetAllOrderDetails() {
            object[] results = this.Invoke("GetAllOrderDetails", new object[0]);
            return ((OrderDetailsWithDateTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrderDetailsAsync() {
            this.GetAllOrderDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllOrderDetailsAsync(object userState) {
            if ((this.GetAllOrderDetailsOperationCompleted == null)) {
                this.GetAllOrderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAllOrderDetails", new object[0], this.GetAllOrderDetailsOperationCompleted, userState);
        }
        
        private void OnGetAllOrderDetailsOperationCompleted(object arg) {
            if ((this.GetAllOrderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrderDetailsCompleted(this, new GetAllOrderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopPreOrderAndIsPending", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PreOrder GetTopPreOrderAndIsPending() {
            object[] results = this.Invoke("GetTopPreOrderAndIsPending", new object[0]);
            return ((PreOrder)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopPreOrderAndIsPendingAsync() {
            this.GetTopPreOrderAndIsPendingAsync(null);
        }
        
        /// <remarks/>
        public void GetTopPreOrderAndIsPendingAsync(object userState) {
            if ((this.GetTopPreOrderAndIsPendingOperationCompleted == null)) {
                this.GetTopPreOrderAndIsPendingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopPreOrderAndIsPendingOperationCompleted);
            }
            this.InvokeAsync("GetTopPreOrderAndIsPending", new object[0], this.GetTopPreOrderAndIsPendingOperationCompleted, userState);
        }
        
        private void OnGetTopPreOrderAndIsPendingOperationCompleted(object arg) {
            if ((this.GetTopPreOrderAndIsPendingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopPreOrderAndIsPendingCompleted(this, new GetTopPreOrderAndIsPendingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTopPreOrdertempItemCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTopPreOrdertempItemCount(int tempItemCount, int ID) {
            object[] results = this.Invoke("UpdateTopPreOrdertempItemCount", new object[] {
                        tempItemCount,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTopPreOrdertempItemCountAsync(int tempItemCount, int ID) {
            this.UpdateTopPreOrdertempItemCountAsync(tempItemCount, ID, null);
        }
        
        /// <remarks/>
        public void UpdateTopPreOrdertempItemCountAsync(int tempItemCount, int ID, object userState) {
            if ((this.UpdateTopPreOrdertempItemCountOperationCompleted == null)) {
                this.UpdateTopPreOrdertempItemCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTopPreOrdertempItemCountOperationCompleted);
            }
            this.InvokeAsync("UpdateTopPreOrdertempItemCount", new object[] {
                        tempItemCount,
                        ID}, this.UpdateTopPreOrdertempItemCountOperationCompleted, userState);
        }
        
        private void OnUpdateTopPreOrdertempItemCountOperationCompleted(object arg) {
            if ((this.UpdateTopPreOrdertempItemCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTopPreOrdertempItemCountCompleted(this, new UpdateTopPreOrdertempItemCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePreOrderStatusByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePreOrderStatusByID(string Statues, int ID) {
            object[] results = this.Invoke("UpdatePreOrderStatusByID", new object[] {
                        Statues,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePreOrderStatusByIDAsync(string Statues, int ID) {
            this.UpdatePreOrderStatusByIDAsync(Statues, ID, null);
        }
        
        /// <remarks/>
        public void UpdatePreOrderStatusByIDAsync(string Statues, int ID, object userState) {
            if ((this.UpdatePreOrderStatusByIDOperationCompleted == null)) {
                this.UpdatePreOrderStatusByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePreOrderStatusByIDOperationCompleted);
            }
            this.InvokeAsync("UpdatePreOrderStatusByID", new object[] {
                        Statues,
                        ID}, this.UpdatePreOrderStatusByIDOperationCompleted, userState);
        }
        
        private void OnUpdatePreOrderStatusByIDOperationCompleted(object arg) {
            if ((this.UpdatePreOrderStatusByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePreOrderStatusByIDCompleted(this, new UpdatePreOrderStatusByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrderDetailsStatusByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateOrderDetailsStatusByID(string OrderStatues, int ID) {
            object[] results = this.Invoke("UpdateOrderDetailsStatusByID", new object[] {
                        OrderStatues,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrderDetailsStatusByIDAsync(string OrderStatues, int ID) {
            this.UpdateOrderDetailsStatusByIDAsync(OrderStatues, ID, null);
        }
        
        /// <remarks/>
        public void UpdateOrderDetailsStatusByIDAsync(string OrderStatues, int ID, object userState) {
            if ((this.UpdateOrderDetailsStatusByIDOperationCompleted == null)) {
                this.UpdateOrderDetailsStatusByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderDetailsStatusByIDOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderDetailsStatusByID", new object[] {
                        OrderStatues,
                        ID}, this.UpdateOrderDetailsStatusByIDOperationCompleted, userState);
        }
        
        private void OnUpdateOrderDetailsStatusByIDOperationCompleted(object arg) {
            if ((this.UpdateOrderDetailsStatusByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderDetailsStatusByIDCompleted(this, new UpdateOrderDetailsStatusByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        private System.Nullable<int> idField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private int userLevelField;
        
        private string emailField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public int UserLevel {
            get {
                return this.userLevelField;
            }
            set {
                this.userLevelField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderDetailsWithDateTime {
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> orderIDField;
        
        private System.Nullable<int> itemIDField;
        
        private string csNameField;
        
        private string csLastField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string contactField;
        
        private string emailField;
        
        private System.Nullable<int> suppIDField;
        
        private System.Nullable<int> itemCountField;
        
        private string orderStatuesField;
        
        private System.DateTime orderDateField;
        
        private System.Nullable<decimal> totalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public string CsName {
            get {
                return this.csNameField;
            }
            set {
                this.csNameField = value;
            }
        }
        
        /// <remarks/>
        public string CsLast {
            get {
                return this.csLastField;
            }
            set {
                this.csLastField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SuppID {
            get {
                return this.suppIDField;
            }
            set {
                this.suppIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ItemCount {
            get {
                return this.itemCountField;
            }
            set {
                this.itemCountField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatues {
            get {
                return this.orderStatuesField;
            }
            set {
                this.orderStatuesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PreOrder {
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> itemIDField;
        
        private System.Nullable<int> orderIDField;
        
        private System.Nullable<int> supIDField;
        
        private string statuesField;
        
        private System.Nullable<int> tempItemCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SupID {
            get {
                return this.supIDField;
            }
            set {
                this.supIDField = value;
            }
        }
        
        /// <remarks/>
        public string Statues {
            get {
                return this.statuesField;
            }
            set {
                this.statuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> tempItemCount {
            get {
                return this.tempItemCountField;
            }
            set {
                this.tempItemCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderDetails {
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> orderIDField;
        
        private System.Nullable<int> itemIDField;
        
        private string csNameField;
        
        private string csLastField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string contactField;
        
        private string emailField;
        
        private System.Nullable<int> suppIDField;
        
        private System.Nullable<int> itemCountField;
        
        private string orderStatuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public string CsName {
            get {
                return this.csNameField;
            }
            set {
                this.csNameField = value;
            }
        }
        
        /// <remarks/>
        public string CsLast {
            get {
                return this.csLastField;
            }
            set {
                this.csLastField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SuppID {
            get {
                return this.suppIDField;
            }
            set {
                this.suppIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ItemCount {
            get {
                return this.itemCountField;
            }
            set {
                this.itemCountField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatues {
            get {
                return this.orderStatuesField;
            }
            set {
                this.orderStatuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Order {
        
        private System.Nullable<int> idField;
        
        private decimal totalField;
        
        private System.DateTime orderDateField;
        
        private string orderStatuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public decimal Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatues {
            get {
                return this.orderStatuesField;
            }
            set {
                this.orderStatuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Product {
        
        private System.Nullable<int> idField;
        
        private string nameField;
        
        private string discriptionField;
        
        private int stockLevelField;
        
        private int ctIDField;
        
        private int supIDField;
        
        private int isLiveField;
        
        private decimal priceField;
        
        private int sizeField;
        
        private string imgUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Discription {
            get {
                return this.discriptionField;
            }
            set {
                this.discriptionField = value;
            }
        }
        
        /// <remarks/>
        public int StockLevel {
            get {
                return this.stockLevelField;
            }
            set {
                this.stockLevelField = value;
            }
        }
        
        /// <remarks/>
        public int CtID {
            get {
                return this.ctIDField;
            }
            set {
                this.ctIDField = value;
            }
        }
        
        /// <remarks/>
        public int SupID {
            get {
                return this.supIDField;
            }
            set {
                this.supIDField = value;
            }
        }
        
        /// <remarks/>
        public int IsLive {
            get {
                return this.isLiveField;
            }
            set {
                this.isLiveField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string ImgUrl {
            get {
                return this.imgUrlField;
            }
            set {
                this.imgUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Category {
        
        private System.Nullable<int> idField;
        
        private string nameField;
        
        private string discriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Discription {
            get {
                return this.discriptionField;
            }
            set {
                this.discriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LoginInfo {
        
        private string emailField;
        
        private string passwordField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDataToUsersCompletedEventHandler(object sender, InsertDataToUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataToUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataToUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserByUsersEmailCompletedEventHandler(object sender, GetUserByUsersEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByUsersEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByUsersEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckUserNameAndPasswordCompletedEventHandler(object sender, CheckUserNameAndPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserNameAndPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserNameAndPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDataToCategoriesCompletedEventHandler(object sender, InsertDataToCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataToCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataToCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllCategoriesCompletedEventHandler(object sender, GetAllCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Category[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Category[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryByCatIdCompletedEventHandler(object sender, GetCategoryByCatIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryByCatIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryByCatIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Category Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Category)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateCategoryByIdCompletedEventHandler(object sender, UpdateCategoryByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDataIntoProdoctsCompletedEventHandler(object sender, InsertDataIntoProdoctsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataIntoProdoctsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataIntoProdoctsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllProductsCompletedEventHandler(object sender, GetAllProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProctByProductIdCompletedEventHandler(object sender, GetProctByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProctByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProctByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateProductByIdCompletedEventHandler(object sender, UpdateProductByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllProductsByUserIdCompletedEventHandler(object sender, GetAllProductsByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProductsByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProductsByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserByUsersIDCompletedEventHandler(object sender, GetUserByUsersIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByUsersIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByUsersIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDataToOrdersCompletedEventHandler(object sender, InsertDataToOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataToOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataToOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDataToOrderDetailsCompletedEventHandler(object sender, InsertDataToOrderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataToOrderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataToOrderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDataToPreOrderCompletedEventHandler(object sender, InsertDataToPreOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataToPreOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataToPreOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderByOrderIdCompletedEventHandler(object sender, GetOrderByOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderByOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderByOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderDetailsByIdCompletedEventHandler(object sender, GetOrderDetailsByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDetailsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDetailsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPreOrderByIdCompletedEventHandler(object sender, GetPreOrderByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreOrderByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreOrderByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PreOrder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PreOrder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderByLastOrderIdCompletedEventHandler(object sender, GetOrderByLastOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderByLastOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderByLastOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLastOrderDetailsByIdCompletedEventHandler(object sender, GetLastOrderDetailsByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastOrderDetailsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastOrderDetailsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateCurrentStockLebelCompletedEventHandler(object sender, UpdateCurrentStockLebelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCurrentStockLebelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCurrentStockLebelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderDetailsFromOrderIdOrEmailCompletedEventHandler(object sender, GetOrderDetailsFromOrderIdOrEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDetailsFromOrderIdOrEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDetailsFromOrderIdOrEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDetailsWithDateTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDetailsWithDateTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllOrderDetailsBySuppIDCompletedEventHandler(object sender, GetAllOrderDetailsBySuppIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrderDetailsBySuppIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrderDetailsBySuppIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDetailsWithDateTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDetailsWithDateTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllOrderDetailsCompletedEventHandler(object sender, GetAllOrderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDetailsWithDateTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDetailsWithDateTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTopPreOrderAndIsPendingCompletedEventHandler(object sender, GetTopPreOrderAndIsPendingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopPreOrderAndIsPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopPreOrderAndIsPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PreOrder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PreOrder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateTopPreOrdertempItemCountCompletedEventHandler(object sender, UpdateTopPreOrdertempItemCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTopPreOrdertempItemCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTopPreOrdertempItemCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdatePreOrderStatusByIDCompletedEventHandler(object sender, UpdatePreOrderStatusByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePreOrderStatusByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePreOrderStatusByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateOrderDetailsStatusByIDCompletedEventHandler(object sender, UpdateOrderDetailsStatusByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrderDetailsStatusByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrderDetailsStatusByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591